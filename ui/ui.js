// Generated by CoffeeScript 1.7.1
(function() {
  var DATA_MEMBERS_URL, DATA_PAGES_URL, Member, Page, build, icon;

  DATA_MEMBERS_URL = 'data/members.json';

  DATA_PAGES_URL = 'data/pages.json';

  build = function(klass) {
    return jQuery("<div></div>").addClass(klass);
  };

  icon = function(klass) {
    return jQuery("<i></i>").addClass("fa fa-" + klass);
  };

  Member = (function() {
    function Member(obj) {
      this.name = obj.name;
      this.realname = obj.realname;
      this.email = obj.email;
      this.avatar = obj.avatar;
      this.weibo = obj.weibo;
      this.zhihu = obj.zhihu;
      this.$members = jQuery('.page-members .members');
    }

    Member.prototype.render = function() {
      this.$elm = build('member').appendTo(this.$members).hide().fadeIn();
      this.$avatar = build('pie avatar s100 bordered').appendTo(this.$elm);
      this.$avatar_img = jQuery("<img />").attr('src', this.avatar).appendTo(this.$avatar);
      this.$name = build('name bold').html(this.name).appendTo(this.$elm);
      this.$email = build('email').html(this.email).prepend(icon('envelope-o')).appendTo(this.$elm);
      if (this.weibo) {
        this.$weibo = build('weibo').append(icon('weibo')).append("<a href='" + this.weibo + "' target='_blank'>" + this.weibo + "</a>").appendTo(this.$elm);
      }
      if (this.zhihu) {
        return this.$zhihu = build('zhihu').append(icon('zhihu')).append("<a href='" + this.zhihu + "' target='_blank'>" + this.zhihu + "</a>").appendTo(this.$elm);
      }
    };

    Member.load_data = function() {
      return jQuery.ajax({
        url: DATA_MEMBERS_URL,
        type: 'GET',
        dataType: 'json',
        success: (function(_this) {
          return function(res) {
            var member, obj, _i, _len, _results;
            _results = [];
            for (_i = 0, _len = res.length; _i < _len; _i++) {
              obj = res[_i];
              member = new Member(obj);
              _results.push(member.render());
            }
            return _results;
          };
        })(this)
      });
    };

    return Member;

  })();

  Page = (function() {
    function Page(obj) {
      this.title = obj.title;
      this.desc = obj.desc;
      this.url = obj.url;
      this.github = obj.github;
      this.$pages = jQuery('.page-pages .pages');
    }

    Page.prototype.render = function() {
      this.$elm = build('page').appendTo(this.$pages).hide().fadeIn();
      this.$title = build('title').html(this.title).appendTo(this.$elm);
      this.$desc = build('desc').html(this.desc).appendTo(this.$elm);
      return this.$url = build('url').append(icon('arrow-circle-right')).append("<a href='" + this.url + "' target='_blank'>" + this.url + "</a>").appendTo(this.$elm);
    };

    Page.load_data = function() {
      return jQuery.ajax({
        url: DATA_PAGES_URL,
        type: 'GET',
        dataType: 'json',
        success: (function(_this) {
          return function(res) {
            var obj, page, _i, _len, _results;
            _results = [];
            for (_i = 0, _len = res.length; _i < _len; _i++) {
              obj = res[_i];
              page = new Page(obj);
              _results.push(page.render());
            }
            return _results;
          };
        })(this)
      });
    };

    return Page;

  })();

  jQuery(function() {
    Page.load_data();
    return Member.load_data();
  });

}).call(this);
